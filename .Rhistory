llibrary(dplyr)
llibrary(ggplot2)
install.packages(dplyr)
library(dplyr)
install.packages('dplyr')
install.packages('dplyr')
install.packages('usingR')
install.packages('UsingR')
library(UsingR,warn.conflicts = T)
data("diamond")
dm <- diamond
y <- dm$price ; x <- dm$carat ; n <- length(y)
fit <- lm(y ~ x)
e <- resid(fit)
yhat <- predict(fit)
yhat
y
x[48]
max(abs(e - (y-yhat)))
max(abs(e - (y-coef(fit)[1] - coef(fit)[2]*x)))
e
sum(e)
sum(e*x)
plot(dm$carat,dm$price,xlab = 'mass',ylab = 'price',bg = 'lightblue',col = 'black',cex = 1.1,pch = 21)
abline(fit,lwd = 2)
for (i in 1:n) lines(c(x[i],x[i]),c(y[i],yhat[i]),col = 'red',lwd = 2)
plot(dm$carat,dm$price,xlab = 'mass',ylab = 'price',bg = 'lightblue',col = 'black',cex = 1.1,pch = 21,frame = F)
plot(dm$carat,dm$price,xlab = 'mass',ylab = 'price',bg = 'lightblue',col = 'black',cex = 1.1,pch = 21,frame = T)
abline(fit,lwd = 2)
for (i in 1:n) lines(c(x[i],x[i]),c(y[i],yhat[i]),col = 'red',lwd = 2)
plot(x,e)
e
plot(x,e,xlab = 'mass',ylab = 'residual',bg = 'lightblue',col = 'black',cex = 2,pch = 21,frame = F)
abline(h = 0,lwd = 2)
for (i in 1:n) lines(c(x[i],x[i]),c(0,e[i]),col = 'red',lwd = 1.8)
rm(list = ls())
x = runif(100,-3,3)
y = x + sin(x) + rnorm(100,sd = 0.2)
library(ggplot2)
g = ggplot(data.frame(x = x , y = y), aes(x =x , y = y))
g = g + geom_smooth(method = 'lm',colour = 'black')
g = g + geom_point(size = 7 , colour = black, alpha = 0.4)
g = g + geom_point(size = 7 , colour = 'black', alpha = 0.4)
g
g = g + geom_point(size = 5, colour = 'red',alpha = 0.4)
g
g = ggplot(data.frame(x = x , y = resid(lm(y~x))),aes(x =x , y=y ))
g = g + geom_hline(yintercept = 0,size = 2)
g = g + geom_point(size = 7 , colour = 'black',alpha = 0.4)
g = g + geom_point(size = 5 , colour = 'red',alpha = 0.4)
g = g + xlab('x') + ylab('residual')
g
anscombe
a <- anscombe
library(ggplot2)
g <- ggplot(a)
g <- g + geom_point(aes(x1,y1))
g
g + geom_smooth(formula = y1 ~ x1 , method = 'lm')
g + geom_smooth(formula = y1 ~ x1)
?geom_smooth
g + geom_smooth(formula = y ~ x)
g + geom_smooth(formula = y ~ x,method = 'lm')
g + geom_smooth(y ~ x,method = 'lm')
g + geom_smooth(y1 ~ x1,method = 'lm')
g + geom_smooth(aes(y1 ~ x1),method = 'lm')
g + geom_smooth(aes(y = y1,x =  x1),y ~ x,method = 'lm')
rm(g)
fit1 <- lm(a$y1 ~ a$y1)
abline(fit1)
plot.new
plot.new()
abline(fit1)
plot(a$x1,a$y1)
abline(fit1, lwd = 2)
fit1 <- lm(y1 ~ x1 , data = a)
abline(fit1, lwd = 2)
plot(a$x1,a$y1)
abline(fit1, lwd = 2,col = 2)
fit1$sigma
summary(fit1)
paste('a$x',1,)
paste('a$x',1)
paste('a$x',1,sep = '')
do(paste('a$x',1,sep = ''))
head(a)
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4])
}
fit1
fit1$residuals
fit1$coefficients
summary(fit1)
sd(resid(fit1))
var(resid(fit1))
fit1$terms
fit1$sigma
mean(fit1$residuals)
sd(fit1$residuals)
length(a$x1)
a <- anscombe
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue')
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit1$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main = rsqrd)
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue')
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main = rsqrd)
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 21,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),xlab = coef(fit))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),xlab = coef(fit))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),xlab =paste('coeffs of regression line is :' ,coef(fit)))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),xlab =paste('coeffs of regression line is :' ,as.string(coef(fit)))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),xlab =paste('coeffs of regression line is :' ,coef(fit)))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),xlab =paste('x',i),ylab = paste('y',[i+4]))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),xlab =paste('x',i),ylab = paste('y',i+4))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),xlab =paste('x',i,sep = ''),ylab = paste('y',i+4,sep = ''))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd))
xlab = paste('x',i,sep = '')
ylab = paste('y',i+4,sep = '')
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd))
xlab = paste('x',i,sep = '')
ylab = cat('y',i+4,sep = '')
}
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd))
xlab = paste('x',i,sep = '')
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd))
xlab(paste('x',i,sep = ''))
ylab(paste('y',i+4,sep = ''))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),  xlab(paste('x',i,sep = ''))
ylab(paste('y',i+4,sep = '')))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),  xlab(paste('x',i,sep = '')),
ylab=paste('y',i+4,sep = ''))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),  xlab(paste('x',i,sep = '')),
ylab(paste('y',i+4,sep = '')))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),  xlab(paste('x',i,sep = '')),
ylab(paste('y',i+4,sep = '')))
}
a <- anscombe
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),  xlab(paste('x',i,sep = '')))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
plot(a[,i],a[,i+4],col = 'black',pch = 21,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),  xlab(paste('x',i,sep = '')))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),  xlab(paste('x',i,sep = '')))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 18,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals)^2/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),  xlab(paste('x',i,sep = '')))
}
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals^2)/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),  xlab(paste('x',i,sep = '')))
}
library(UsingR)
data("diamond")
y <- diamond$price ; x <- diamond$carat ; n <- length(y)
beta1 <- cor(y,x)*sd(y)/sd(x)
beta0 <- mean(y) - beta1*mean(x)
e <- y - beta0 - beta1*x
sigma <- sqrt(sum(e^2)/(n-2))
ssx <- sum((x-mean(x)^2)
ssx <- sum((x-mean(x)^2))
seBeta0 <- seBeta0 <- (1/n + mean(x)^2 / ssx)^ 0.5 * sigma
seBeta0
seBeta1 <- sigma/sqrt(ssx)
a <- anscombe
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals^2)/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd),  xlab(paste('x',i,sep = '')))
}
a <- anscombe
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals^2)/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd)))
}
a <- anscombe
plot.new()
par(mfrow = c(2,2))
for (i in 1:4){
plot(a[,i],a[,i+4],col = 'lightblue',pch = 19,cex = 2)
fit = lm ( a[,i+4] ~ a[,i] )
rsqrd <- sqrt(sum(fit$residuals^2)/9)
abline(fit,col = 2,lwd = 2)
title(main =paste( 'R2 for this set of data is :',rsqrd))
}
install.packages('prettydoc')
library(prettydoc)
knitr::opts_chunk$set(echo = TRUE)
if(! file.exists('Rrepro1')) {
dir.create('Rrepro1')
setwd('.')
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = '/Rrepro1/data.zip')
unzip(zipfile = '/Rrepro1/data.zip')
unlink('/Rrepro1/data.zip', recursive = T)
}
activity <- read.csv('./Rrepro1/activity.csv')
head(activity)
getwd)
getwd()
setwd(./R)
setwd("./R")
ls
ls()
dir
dir()
setwd(
"./HumanActivity"
)
getwd()
knitr::opts_chunk$set(echo = TRUE)
#loading libraries needed
library(ggplot2,warn.conflicts = F) ; library(dplyr,warn.conflicts = F)
if(! file.exists('Rrepro1')) {
dir.create('Rrepro1')
setwd('.')
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = '/Rrepro1/data.zip')
unzip(zipfile = '/Rrepro1/data.zip')
unlink('/Rrepro1/data.zip', recursive = T)
}
rm(list = ls())
if(! file.exists('Rrepro1')) {
dir.create('Rrepro1')
setwd('.')
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = '/Rrepro1/data.zip')
unzip(zipfile = '/Rrepro1/data.zip')
unlink('/Rrepro1/data.zip', recursive = T)
}
ls()
dir()
if(! file.exists('activity.csv')) {
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = 'data.zip')
unzip(zipfile = '/Rrepro1/data.zip')
unlink('/Rrepro1/data.zip', recursive = T)
}
getwd()
dir()
if(! file.exists('activity.csv')) {
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = 'data.zip')
unzip(zipfile = '/Rrepro1/data.zip')
unlink('/Rrepro1/data.zip', recursive = T)
}
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = 'data.zip')
unzip(zipfile = '/Rrepro1/data.zip')
file.exists('activity.csv')
if(! file.exists('activity.csv')) {
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = 'data.zip')
unzip(zipfile = '/Rrepro1/data.zip')
unlink('/Rrepro1/data.zip', recursive = T)
}
if(! file.exists('activity.csv')) {
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = 'data.zip')
unzip(zipfile = '/Rrepro1/data.zip')
unlink('data.zip', recursive = T)
}
if(! file.exists('activity.csv')) {
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = 'data.zip')
unzip(zipfile = 'data.zip')
unlink('data.zip', recursive = T)
}
if(! file.exists('activity.csv')) {
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = 'data.zip')
unzip(zipfile = 'data.zip')
unlink('data.zip', recursive = T)
}
knitr::opts_chunk$set(echo = TRUE)
#loading libraries needed
library(ggplot2,warn.conflicts = F) ; library(dplyr,warn.conflicts = F)
if(! file.exists('activity.csv')) {
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = 'data.zip')
unzip(zipfile = 'data.zip')
unlink('data.zip', recursive = T)
}
activity <- read.csv('./activity.csv')
head(activity)
if(! file.exists('activity.csv')) {
download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = 'data.zip')
unzip(zipfile = 'data.zip')
unlink('data.zip', recursive = T)
}
act_sum <- activity %>%  group_by(date) %>%  summarise(sum(steps))
names(act_sum)[2] <- 'steps'
avgstep <- mean(act_sum$steps, na.rm = T)
g <-
ggplot(data = act_sum, aes(x = date, y = steps)) +
geom_bar(stat = 'identity') + geom_hline(yintercept = avgstep, color = 'magenta')
g
act_sum <- activity %>%  group_by(date) %>%  summarise(sum(steps))
names(act_sum)[2] <- 'steps'
avgstep <- mean(act_sum$steps, na.rm = T)
g <-
ggplot(data = act_sum, aes(x = date, y = steps)) +
geom_bar(stat = 'identity') + geom_hline(yintercept = avgstep, color = 'magenta')
g
avgstep # mean
medsteps <- median(act_sum$steps,na.rm = T)
medsteps #median
ggplot(act_sum,aes(steps)) + geom_histogram()
ggplot(act_sum,aes(steps)) + geom_histogram(binwidth = 50)
ggplot(act_sum,aes(steps)) + geom_histogram(binwidth = 150)
ggplot(act_sum,aes(steps)) + geom_histogram(binwidth = 250)
ggplot(act_sum,aes(steps)) + geom_histogram(binwidth = 500)
ggplot(act_sum,aes(steps)) + geom_histogram(binwidth = 600)
ggplot(act_sum,aes(steps)) + geom_histogram(binwidth = 600)
